@model Models.Common.Organization
@using Models.Common;
@using CTIServices
@{
    ViewBag.Title = "Organization";

    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    var orgs = Model.OrganizationRole_Recipient.Select( m => m.TargetOrganization ).ToList();
    var addressList = new List<Dictionary<string, string>>();
    foreach ( var org in orgs )
    {
        //addressList.Add( new Dictionary<string, string>() { { "id", org.Id.ToString() }, { "address", org.Address.DisplayAddress() } } );
    }

    addressList.Add( new Dictionary<string, string>() { { "id", Model.Id.ToString() }, { "address", Model.Address.DisplayAddress() } } );

    var canPublish = AccountServices.CanUserPublishContent();

}
@functions {
    public bool HasText( string input )
    {
        return !string.IsNullOrWhiteSpace( input );
    }
}

@Html.Partial( "~/Views/Shared/Detail/_DetailCore.cshtml", new ViewDataDictionary() { { "organizationAddresses", addressList } } )

@Html.Partial( "~/Views/Compare/_CompareBar.cshtml", "" )

<script type="text/javascript">
    var jsonLD = @Html.Raw( new JsonLDServices().GetSerializedJsonLDOrganization( Model ) );
    $(document).ready(function() {
        $("#json").html(JSON.stringify(jsonLD,null,"\t"));
    });
</script>

<script type="text/javascript">
    var org = @Html.Raw( serializer.Serialize( Model ) );
    googleMaps.findUsMap = { ready: false, box: "#ourMap", map: {}, markers: [], addresses: [{ id: @Model.Id.ToString(), address: "@Model.Address.DisplayAddress()" }] };

    $(document).ready(function() {
        //Try to force the google map to display
        $("input[data-tabID=find]").on("click", function() {
            moveMap(googleMaps.findUsMap.map, mapCenter.lat, mapCenter.lng, 3);
        });
    });

    console.log(org.SocialMedia);
</script>

<style type="text/css">
    #findUsBox { font-size: 0; }
    #contactInfo, #ourMap { display: inline-block; vertical-align: top; }
    #contactInfo { width: 300px; padding: 0 5px; }
    #contactInfo > div { margin-bottom: 10px; }
    #ourMap { width: calc(100% - 300px); height: 400px; }
    #ourAddress div { font-size: 20px; }

    #findUsBox.mainMap { font-size: 0; }
    #findUsBox.mainMap #contactInfo, #findUsBox.mainMap #socialMedia { display: inline-block; vertical-align: top; }
    #findUsBox.mainMap #contactInfo { width: calc(100% - 31px); }
    #findUsBox.mainMap #socialMedia { width: 31px; margin-top: -30px; }
    #findUsBox.mainMap #socialMedia a { display: block; width: 31px; height: 31px; margin: 0 0 5px 0; opacity: 0.7; background-size: contain; background-repeat: no-repeat; background-position: center center; border-radius: 5px; }
    #findUsBox.mainMap #socialMedia a:hover, #findUsBox.mainMap #socialMedia a:focus { opacity: 1; background-color: #47CEC7; }

    .ourCredential { border: 1px solid #CCC; margin: 0 5px 10px 5px; padding: 5px 5px 5px 105px; background-position: left center; background-size: 100px; min-height: 110px; background-repeat: no-repeat; }
    .ourCredential .credentialName { font-weight: bold; font-size: 20px; color: #5a7d83; display: block; }
    .ourCredential .credentialDescription { padding: 5px; }
</style>
<style type="text/css">
    #findUsBox.mainMap #socialMedia a { background-image: url('@Url.Content( "~/Images/Social/other.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=twitter] { background-image: url('@Url.Content( "~/Images/Social/twitter.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=facebook] { background-image: url('@Url.Content( "~/Images/Social/facebook.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=google] { background-image: url('@Url.Content( "~/Images/Social/googleplus.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=pinterest] { background-image: url('@Url.Content( "~/Images/Social/pinterest.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=youtube] { background-image: url('@Url.Content( "~/Images/Social/youtube.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=linkedin] { background-image: url('@Url.Content( "~/Images/Social/linkedin.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=apple] { background-image: url('@Url.Content( "~/Images/Social/apple.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=yahoo] { background-image: url('@Url.Content( "~/Images/Social/yahoo.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=flickr] { background-image: url('@Url.Content( "~/Images/Social/flickr.png" )'); }
    #findUsBox.mainMap #socialMedia a[href*=instagram] { background-image: url('@Url.Content( "~/Images/Social/instagram.png" )'); }
</style>
<style type="text/css">
    .ourCredential[data-type*=badge] { background-image: url('@Url.Content("~/images/icons/cti_icon_badge_pink.png")'); }
    .ourCredential[data-type*=certificate] { background-image: url('@Url.Content("~/images/icons/cti_icon_certificate_pink.png")'); }
    .ourCredential[data-type*=certification] { background-image: url('@Url.Content("~/images/icons/cti_icon_certification_pink.png")'); }
    .ourCredential[data-type*=degree] { background-image: url('@Url.Content("~/images/icons/cti_icon_degree_pink.png")'); }
    .ourCredential[data-type*=diploma] { background-image: url('@Url.Content("~/images/icons/cti_diploma_pink.png")'); }
    .ourCredential[data-type*=license] { background-image: url('@Url.Content("~/images/icons/cti_license_pink.png")'); }
    .ourCredential[data-type*=apprentice] { background-image: url('@Url.Content("~/images/icons/cti_apprenticeship_pink.png")'); }
    .ourCredential[data-type*=military] { background-image: url('@Url.Content("~/images/icons/cti_military_pink.png")'); }
    .ourCredential[data-type*=micro] { background-image: url('@Url.Content("~/images/icons/cti_micro_pink.png")'); }
    .ourCredential[data-type*=quality] { background-image: url('@Url.Content("~/images/icons/cti_icon_star_bg.png")'); }
</style>

<div id="editButtons">
    <input type="button" value="Compare" onclick="compare.addItem(@Model.Id, 'organization', '@Model.Name');" />
    @if ( canPublish )
    {
        <a class="editLink linkButton" href="@Url.Content("~/editor/organization/")@Model.Id">Edit</a>
        <input type="button" class="redButton" value="Delete" onclick="deleteThis('@Model.Name', 'credential', @Model.Id);" />
    }
</div>
<h1><a href="@Model.Url" target="_blank">@Model.Name</a></h1>

<div id="columns">
    <div class="column data">
        <div class="section" id="basic">
            <h2>About Us</h2>
            <div id="description">@Html.Raw( Model.Description )</div>
            <h2>Our Mission</h2>
            @Model.Purpose
        </div>
        <div class="section" id="industry">
            <h2>Organization Type</h2>
            <ul class="keywordsList">
                @foreach ( var item in Model.OrganizationType.Items )
                {
                    <li><a href="@Url.Content( "~/search?searchType=organization&autosearch=true&filters=" + Model.OrganizationType.Id + "-" + item.Id )" target="_blank">@item.Name</a></li>
                }
            </ul>
        </div>
        @*<div class="section" id="qualityAssurance">
            
        </div>*@
        @if ( Model.ServiceType.Items.Count() > 0 )
        {
            <div class="section" id="serviceType">
                <h2>Services</h2>
                <ul class="keywordsList">
                    @foreach ( var item in Model.ServiceType.Items )
                    {
                    <li><a href="@Url.Content( "~/search?searchType=organization&autosearch=true&filters=" + Model.ServiceType.Id + "-" + item.Id )" target="_blank">@item.Name</a></li>
                    }
                </ul>
            </div>
        }
    </div>
    <div class="column organizations">

        <div id="mapBox"></div>

        <h2>Find Us</h2>
        <div id="findUsBox" class="mainMap">
            <div id="contactInfo">
                <div id="ourAddress">
                    <div class="line1">@Model.Address.Address1</div>
                    <div class="line2">@Model.Address.Address2</div>
                    <div class="cityState">@Model.Address.City, @Model.Address.AddressRegion @Model.Address.PostalCode</div>
                    <div class="country">@Model.Address.Country</div>
                </div>
                <div id="phone">
                    @Model.MainPhoneNumber
                </div>
                @if ( !string.IsNullOrWhiteSpace( Model.Email ) )
                {
                    <div id="email">
                        <a href="mailto:@Model.Email">Email</a>
                    </div>
                }
            </div>
            <div id="socialMedia">
                @foreach ( var item in Model.SocialMedia )
                {
                    <a href="@item.TextValue" title="@item.TextValue" target="_blank"></a>
                }
            </div>
        </div>
        @*
        <h2>Organization Roles</h2>
        @if ( Model.OrganizationRole_Recipient == null || Model.OrganizationRole_Recipient.Count() == 0 )
        {
            <p>No organization roles available</p>
        }

        @{
            //Match roles with code tables so proper sorting can be done
            var roles = new EnumerationServices().GetCredentialAgentRoles( EnumerationType.CUSTOM );
            foreach ( var item in Model.OrganizationRole_Recipient )
            {
                var matchedRole = roles.Items.FirstOrDefault( m => m.CodeId == item.RoleTypeId );
                item.RoleType.Name = matchedRole.Name;
                item.RoleType.Id = item.RoleTypeId;
                item.RoleType.SchemaName = matchedRole.SchemaName;
            }

        }
        @foreach ( var orgID in Model.OrganizationRole_Recipient.Select( m => m.ActingAgentId ).Distinct().ToList() )
        {
            var rolesForCurrentOrg = Model.OrganizationRole_Recipient.Where( m => m.ActingAgentId == orgID ).ToList();
            var org = OrganizationServices.GetOrganization( orgID );
            org.OrganizationRole_Actor = rolesForCurrentOrg;
            @Html.Partial( "~/Views/Shared/Detail/_OrganizationBox.cshtml", org );
        }
        *@
    </div>
</div>

<div id="details">
    <div id="tabButtons">
        <input type="button" data-tabid="credentials" class="selected" value="Our Credentials" />
        <input type="button" data-tabid="details" value="Details" />
        <input type="button" data-tabid="json" value="Raw Metadata" />
        @*<input type="button" data-tabid="find" value="Find Us" />*@
        @*<input type="button" data-tabid="keywords" class="selected" value="Keywords" />*@
    </div>
    <div id="tabBox">

        <div class="tab selected" data-tabid="credentials">
            <h2>Our Credentials</h2>
            @if ( Model.CreatedCredentials.Count() > 0 )
            {
                foreach ( var item in Model.CreatedCredentials )
                {
                    var type = "credential";
                    if ( item.CredentialType.Items != null && item.CredentialType.Items.Count > 0 )
                    {
                        type = item.CredentialType.Items.First().SchemaName.ToLower();
                    }
                    <div class="ourCredential" data-type="@type">
                        <a class="credentialName" href="@Url.Content("~/credentialmanagement/detail2/" + item.Id)">@item.Name</a>
                        <div class="credentialDescription">
                            @Html.Raw( item.Description )
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No created credentials found.</p>
            }
        </div>

        <div class="tab" data-tabid="details">
            <h2>Details</h2>
            @{ var hasDetails = false; }
            <table id="details">
                <tbody>
                    @if ( HasText( Model.FoundingDate ) ) { hasDetails = true;  <tr><td>Founded:</td><td>@Model.FoundingDate</td></tr> }
                    @foreach ( var item in Model.Identifiers.Items )
                    {
                        hasDetails = true;
                        <tr><td>@item.Name:</td><td>@item.Value</td></tr>
                    }
                </tbody>
            </table>
            @if ( !hasDetails )
            {
                <p class="noItems">No Detailed information available.</p>
            }
        </div>

        <div class="tab" data-tabid="json">
            <h2>Raw Metadata</h2>
            <p>For readability, the document below uses human-readable labels for controlled vocabulary items.</p>
            <div id="json"></div>
        </div>

        @*
    <div class="tab" data-tabid="find">
        <h2>Find Us</h2>
        <div id="findUsBox">
            <div id="contactInfo">
                <div id="ourAddress">
                    <div class="line1">@Model.Address.Address1</div>
                    <div class="line2">@Model.Address.Address2</div>
                    <div class="cityState">@Model.Address.City, @Model.Address.AddressRegion @Model.Address.PostalCode</div>
                    <div class="country">@Model.Address.Country</div>
                </div>
                <div id="phone">
                    @Model.MainPhoneNumber
                </div>
                <div id="email">
                    <a href="mailto:@Model.Email">Email</a>
                </div>
                <div id="socialMedia">

                </div>
            </div>
            <div id="ourMap"></div>
        </div>
    </div>
*@
        @*<div class="tab" data-tabid="keywords">
            <h2>Keywords</h2>

        </div>*@

    </div>
</div>