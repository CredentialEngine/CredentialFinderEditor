<div class="infoHeader">
    <img src="@Url.Content( "~/images/icons/cti_icon_list_bg.png" )" />
    <p>Everyone needs better information to understand and connect to credentials.  This is why we’ve created the Credential Registry. Credentials come in many forms. The Credential Registry makes distinctions between the types of credentials below.</p>
</div>

@{ 
    var data = new List<dynamic>() { 
        new { 
            Name = "certificate",
            Title = "Certificate", 
            Image = Url.Content( "~/images/icons/cti_icon_certificate_pink.png" ), 
            Description = "A document that designates the successful completion of a certificate program's requisites.",
            Subtypes = new List<string>() { "General Education Development (GED)" }
        },
        new { 
            Name = "certification",
            Title = "Certification", 
            Image = Url.Content( "~/images/icons/cti_icon_certification_pink.png" ), 
            Description = "A non-degree credential awarded by an official certification body to an individual or organization for demonstrating the designated knowledge, skills, and abilities to perform a specific job. A Certification is a time-limited credential that is renewed through a recertification process.",
            Subtypes = new List<string>() {  }
        },
        new { 
            Name = "degree",
            Title = "Degree", 
            Image = Url.Content( "~/images/icons/cti_icon_degree_pink.png" ), 
            Description = "An academic degree is a credential conferred upon an individual for the completion of a program or courses of study, typically over multiple years at postsecondary education institutions.",
            Subtypes = new List<string>() { "Associate", "Bachelor", "Master", "Doctorate", "Doctorate (Professional Practice)", "Doctorate (Research/Scholarship)" }
        },
        new { 
            Name = "diploma",
            Title = "Diploma", 
            Image = Url.Content( "~/images/icons/cti_icon_diploma_pink.png" ), 
            Description = "A document awarded by an educational establishment to show that someone has successfully completed a course of study or equivalent.",
            Subtypes = new List<string>() { "High School" } 
        },
        new { 
            Name = "license",
            Title = "License", 
            Image = Url.Content( "~/images/icons/cti_icon_license_pink.png" ), 
            Description = "A credential awarded by a government agency that constitutes legal authority to do a specific job and/or utilize a specific item, system or infrastructure. Licenses are typically based on some combination of degree or certificate attainment, certifications, assessments, work experience, and/or fees; are time-limited; and must be renewed periodically.",
            Subtypes = new List<string>() {  } 
        },
        new { 
            Name = "micro",
            Title = "Micro-Credential", 
            Image = Url.Content( "~/images/icons/cti_icon_micro_pink.png" ), 
            Description = "A credential that attests to achievement of a specific knowledge, skill, or competency. This may include, but is not limited to, credentials such as digital badges.",
            Subtypes = new List<string>() {  } 
        },
        new { 
            Name = "trade",
            Title = "Apprenticeship Certificate", 
            Image = Url.Content( "~/Images/Icons/cti_icon_apprenticeship_pink.png" ), 
            Description = "Credential earned through work-based learning and post-secondary earn-and-learn models that meet national standards and are applicable to industry trades and professions.",
            Subtypes = new List<string>() { "Journeyman", "Master" }
        }@*,
        new { 
            Name = "badge",
            Title = "Badge (Pending Review)", 
            Image = Url.Content( "~/images/icons/cti_icon_badge_pink.png" ), 
            Description = "Validated indicator of accomplishment, skill, quality, or interest that can be earned in many learning environments issued as a digital badge.",
            Subtypes = new List<string>() {  }
        }*@
    };
}

<div id="credentialTypes">
    @*
    <dl>
        @foreach ( var item in data )
        {
            <div class="di">
                <dt>@item.Title</dt>
                <dd style="background-image: url('@item.Image');">
                    <div>@item.Description</div>
                    @if ( item.Subtypes.Count > 0 )
                    {
                        <div>This credential type encompasses these subtypes:</div>
                        <ul>
                        @foreach ( var type in item.Subtypes )
                        {
                            <li>@type</li>
                        }
                        </ul>
                    }
                </dd>
            </div>
        }
    </dl>
    *@

    <div id="credentialTypesList" class="sliderNavigator" data-slider="credentialTypeSlider">
        @foreach ( var item in data )
        {
            <a class="sliderNavigatorItem" data-name="@item.Name" href="javascript:slideToName('credentialTypeSlider', '@item.Name');" style="background-image: url('@item.Image');" title="@item.Title">@item.Title</a>
        }
    </div>
    <div class="slider singleitem autoslide" id="credentialTypeSlider" style="height:550px">
        <input class="sliderButton previous" type="button" value="<" onclick="slidePrevious('credentialTypeSlider');" />
        <div class="slideCanvas">
            <dl class="slideBox">
                <div class="slideHeightFix"></div>
                @foreach ( var item in data )
                {
                    <div class="slide" data-name="@item.Name" style="background-image: url('@item.Image');">
                        <dt class="slideTitle">@item.Title</dt>
                        <dd class="slideDescription">
                            <div>@item.Description</div>
                            @if ( item.Subtypes.Count > 0 )
                            {
                                <div>This credential type encompasses these subtypes:</div>
                                <ul>
                                    @foreach ( var type in item.Subtypes )
                                    {
                                        <li>@type</li>
                                    }
                                </ul>
                            }
                        </dd>
                    </div>
                }
            </dl>
        </div>
        <input class="sliderButton next" type="button" value=">" onclick="slideNext('credentialTypeSlider');" />
    </div>
</div>
