<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <appSettings>
    <add key="siteVersion" value="2016-03-22" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="envType" value="test" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    <!-- NEED TO CREATE Google API keys -->

    <add key="goggleClientId" value="TBD.apps.googleusercontent.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="goggleClientSecret" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    <add key="GeoNamesUserName" value="TBD" />
    <add key="GoogleMapsApiKey" value="TBD" />
    <add key="GoogleGeocodingServerApiKey" value="TBD" />
    <add key="SendGridApiKey" value="TBD" />
    
    <!-- CR related ======================================= -->
    <add key="doingLRPublish" value="no" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>


    <!-- NEED TO CREATE Learning registry account, and provide userId, and password -->
    <add key="learningRegistryUserId" value="info@TBD.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="learningRegistryPassword" value ="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="lrIdentitySigner" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    <!--(Data Signing Key) -->
    <add key="signingUserId" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="signingPassword" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="signingKeyLocation" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="publicKeyLocationId" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="defaultPublisher" value="TBD" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="defaultSubmitter" value="TBD on Behalf of " xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
 
    
    <!-- use web service, and ignore others TEMP UNTIL OUR OWN IS SET UP-->
    <add key="SendEmailService" value="" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="smtpEmail" value="localhost" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <!-- sendEmailFlag - use TRUE uppercase to set on -->
    <add key="sendEmailFlag" value="TRUE" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <!-- if yes, will send email to an admin id, overriding an actual email address -->
    <add key="usingTempOverrideEmail" value="yes" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="contactUsMailTo" value="info@MyOrg.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="contactUsMailFrom" value="DoNotReply@MyOrg.org" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>

    <!-- Email for system and/or application related messages -->
    <add key="systemAdminEmail" value="admin@MyOrg.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    <add key="systemNotifyFromEmail" value="dev@MyOrg.com" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
    
  </appSettings>

  <connectionStrings>
    <!-- add userId and password for user with update access to the database-->
    <add name="DefaultConnection" connectionString="Server=localhost;database=CTI;User Id=ctiAdmin;password=TBD;Pooling=true;Min Pool Size=10;Max Pool Size=50;Connect Timeout=200" providerName="System.Data.SqlClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>

    <add name="CTIEntities" connectionString="metadata=res://*/CTIEntities.csdl|res://*/CTIEntities.ssdl|res://*/CTIEntities.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=localhost;initial catalog=CTI;persist security info=True;user id=ctiAdmin;password=TBD;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
  </connectionStrings>
  <system.web>
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
  </system.web>
  
</configuration>